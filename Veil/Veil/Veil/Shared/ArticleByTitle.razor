@using Veil.Data.Literature



@if (article is not null)
{
    @try
    {

        <MudPaper  Style="overflow: scroll; height: 90vh">

    <h3>
        @(article.title is null ? $"Unable to retreive title for {article.title}" : article.title)
    </h3>

    @foreach (Section s in article.sections)
    {
        @if (s.paragraphs is not null)
        {

            @foreach (Paragraph p in s.paragraphs)
            {
                @if (p.sentences is not null)
                {
                    <p>

                    @foreach (Sentence sentence in p.sentences)
                    {
                        @sentence.text
                        @:&nbsp;
                    }
                    </p>
                }
            }
        }
    }
        </MudPaper>
    }
    catch (Exception)
    {
        
    }
} else {

    @if(NoArticleFound) {
<h3>
    Unable to find article for <b>'@articleTitle'</b>
</h3>
    }
}


@code {
    private string _articleTitle = String.Empty;
    [Parameter]
    public string articleTitle {
        get {
            return _articleTitle;
        }
        set {
            if (_articleTitle != value && !String.IsNullOrWhiteSpace(value))
            {
                _articleTitle = value;
                GetArticle();
            }
            else
            {
                _articleTitle = value;
            }
        }
    }

    public string loadedArticleTitle { get; set; } = String.Empty;

    public bool NoArticleFound { get; set;  } = false;

    WikiService wikiService { get; set; }
    WikipediaArticle? article { get; set; }

    public ArticleByTitle()
    {
        wikiService = new WikiService();

    }
    protected override void OnInitialized()
    {

        if (!String.IsNullOrWhiteSpace(articleTitle))
        {
            if (article is null)
            {

                GetArticle();
            }
            else
            {

            }
        }
        base.OnInitialized();
    }



    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return base.OnAfterRenderAsync(firstRender);
    }

    public void GetArticle()
    {
        article = wikiService.GetArticleWithTitle(articleTitle);
        if(article is not null) {
            loadedArticleTitle = article.title;
            NoArticleFound = false;
        } else {
            NoArticleFound = true;
        }
        StateHasChanged();

    }


}
